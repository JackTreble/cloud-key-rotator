defaults: &defaults
  working_directory: /go/src/github.com/ovotech/cloud-key-rotator

version: 2.1

orbs:
  terraform: ovotech/terraform@1.5

jobs:
  goreleaser:
    <<: *defaults

    docker:
      - image: circleci/golang:1.12

    steps:
      - checkout

      - setup_remote_docker:
          docker_layer_caching: true

      - run:
           name: goreleaser
           command: |
             echo $DOCKER_PASS | docker login -u=$DOCKER_USER --password-stdin
             curl -sL https://git.io/goreleaser | VERSION=v0.116.0 bash
  release_cloudfunction_zip:
    docker:
      - image: cibuilds/github
    steps:
      - checkout
      - run:
          name: "Publish Release on GitHub"
          command: |
            VERSION=$(echo ${CIRCLE_TAG} | sed 's/^v//')
            ZIP_NAME=cloud-key-rotator_${VERSION}_cloudfunction.zip
            zip -R ${ZIP_NAME} '*.go' 'go.mod'
            ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} ${CIRCLE_TAG} ${ZIP_NAME}

  publish_tf_module:
    executor: terraform/terraform-0_12
    steps:
    - checkout
    - terraform/publish-module:
          path: tf_module/ckr
          module_name: pe/ckr/aws
          version_file_path: tf_module/ckr/module_version.txt

  go_fmt:
    <<: *defaults

    docker:
      - image: eversc/go-pr-checks

    steps:
      - checkout

      - run:
           name: ensure gofmt
           command: |
             test -z $(gofmt -s -l $(find . -iname '*.go' -type f | grep -v /vendor/))
  go_vet:
    <<: *defaults

    docker:
      - image: eversc/go-pr-checks

    steps:
      - checkout

      - run:
           name: go vet
           command: |
             export GO111MODULE=on
             go mod download
             go vet ./...

  go_cyclo:
    <<: *defaults

    docker:
      - image: eversc/go-pr-checks

    steps:
      - checkout

      - run:
           name: go_cyclo
           command: gocyclo -over 6 cmd

  go_lint:
    <<: *defaults

    docker:
      - image: eversc/go-pr-checks

    steps:
      - checkout

      - run:
           name: golint
           command: golint -set_exit_status $(go list ./...)

  go_build:
    <<: *defaults

    docker:
      - image: eversc/go-pr-checks

    steps:
      - checkout

      - run:
           name: go build
           command: |
             export GO111MODULE=on
             go build

  go_test:
    <<: *defaults

    docker:
      - image: eversc/go-pr-checks

    steps:
      - checkout

      - run:
           name: go test
           command: |
             export GO111MODULE=on
             go mod download
             go test ./... -v
  

workflows:
  version: 2
  release_pipeline:
    jobs:
      - goreleaser:
          filters:
            tags:
              only: /v[0-9]+(\.[0-9]+)*(-.*)*/
            branches:
              ignore: /.*/
      - release_cloudfunction_zip:
          filters:
            tags:
              only: /v[0-9]+(\.[0-9]+)*(-.*)*/
            branches:
              ignore: /.*/
      - publish_tf_module:
          filters:
            tags:
              only: /v[0-9]+(\.[0-9]+)*(-.*)*/
            branches:
              ignore: /.*/
  pr_pipeline:
    jobs:
      - go_fmt:
          filters:
            branches:
              ignore: master
      - go_vet:
          filters:
            branches:
              ignore: master
      - go_cyclo:
          filters:
            branches:
              ignore: master
      - go_lint:
          filters:
            branches:
              ignore: master
      - go_build:
          filters:
            branches:
              ignore: master
      - go_test:
          filters:
            branches:
              ignore: master
  master_pipeline:
    jobs:
      - go_fmt:
          filters:
            branches:
              only: master
      - go_vet:
          filters:
            branches:
              only: master
      - go_cyclo:
          filters:
            branches:
              only: master
      - go_lint:
          filters:
            branches:
              only: master
      - go_build:
          filters:
            branches:
              only: master
      - go_test:
          filters:
            branches:
              only: master
